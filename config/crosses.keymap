#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>


/ {
/*
    tpad_central_listener {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint0>;
        layers = <0 1>;
        y-invert;
        scale-multiplier = <2>;
        // xy-swap;
        // x-invert;
	};

    
    tpad_central_scroll {
        compatible = "zmk,input-behavior-listener";
        device = <&glidepoint0>;
        layers = <2>;
        /* NOTE: only apply input-code overriding for INPUT_EV_REL */
        evt-type = <INPUT_EV_REL>;
        x-input-code = <INPUT_REL_HWHEEL>;
        y-input-code = <INPUT_REL_WHEEL>;
        bindings = <&ib_wheel_scaler 1 8>;
    };

    ib_wheel_scaler: ib_wheel_scaler {
            compatible = "zmk,input-behavior-scaler";
            #binding-cells = <2>;
            evt-type = <INPUT_EV_REL>;
            input-code = <INPUT_REL_WHEEL>;
    };
*/
    combos {
        compatible = "zmk,combos";

        studio_unlock {
            bindings = <&studio_unlock>;
            key-positions = <0 1>;
        };
        to_bt_control {
            bindings = <&sl 3>;
            key-positions = <54 55>;
        };

        bootloader_left {
            bindings = <&bootloader>;
            key-positions = <40 0 1>;
        };

        bootloader_right {
            bindings = <&bootloader>;
            key-positions = <2 3 51>;
        };
    };

	chosen {
		zephyr,console = &cdc_acm_uart;
	};

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC         &kp LEFT_GUI                                                                                      &mo 3     &kp BACKSPACE
&kp TAB         &kp N1        &kp N2  &kp N3            &kp N4     &kp N5  &kp N6  &kp N7     &kp N8     &kp N9   &kp N0    &kp MINUS
&kp BACKSLASH   &kp Q         &kp W   &kp E             &kp R      &kp T   &kp Y   &kp U      &kp I      &kp O    &kp P     &kp EQUAL
&kp LEFT_SHIFT  &kp A         &kp S   &kp D             &kp F      &kp G   &kp H   &kp J      &kp K      &kp L    &kp SEMI  &kp FSLH
&kp LCTRL       &kp Z         &kp X   &kp C             &kp V      &kp B   &kp N   &kp M      &kp COMMA  &kp DOT  &kp APOS  &kp RALT
                                      &kp K_PLAY_PAUSE  &kp SPACE  &mo 1   &mo 2   &kp ENTER  &kp RCTRL
            >;

           // sensor-bindings =<&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        functions {
            bindings = <
&trans  &trans                                                                             &trans   &trans
&trans  &kp F1    &kp F2        &kp F3     &kp F4  &kp F5  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &trans    &kp UP_ARROW  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans   &kp F12
&trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans    &trans        &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
                                &trans     &trans  &trans  &trans  &trans  &trans
            >;

          //  sensor-bindings = <&inc_dec_kp RIGHT LEFT>;
        };

        raise {
            bindings = <
&trans  &trans                                                                                               &trans             &trans
&trans  &trans          &trans          &trans     &trans  &trans  &trans  &trans  &trans  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
&trans  &trans          &kp UP_ARROW    &trans     &trans  &trans  &trans  &trans  &trans  &trans            &trans             &trans
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &trans  &trans  &trans  &trans  &trans  &trans            &trans             &trans
&trans  &trans          &trans          &trans     &trans  &trans  &trans  &trans  &trans  &trans            &trans             &trans
                                        &trans     &trans  &trans  &trans  &trans  &trans
            >;
        };

        bt_control {
            bindings = <
&bt BT_CLR_ALL  &trans                                                                                                &trans  &trans
&trans          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans
                                            &trans        &trans        &trans        &trans  &trans  &trans
            >;
        };
    };
};

&usbd {
	status = "okay";
	cdc_acm_uart: cdc_acm_uart {
		compatible = "zephyr,cdc-acm-uart";
		label = "CDC_ACM_0";
	};
};
