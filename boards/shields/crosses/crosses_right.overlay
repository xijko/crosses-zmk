#include "crosses.dtsi"
#include <zephyr/dt-bindings/input/input-event-codes.h>

&default_transform {
  col-offset = <6>;
};

&kscan0 {
  col-gpios
    = 
     <&gpio0 9 GPIO_ACTIVE_HIGH>
    , <&gpio0 10 GPIO_ACTIVE_HIGH>
    , <&gpio1 11 GPIO_ACTIVE_HIGH>
    , <&gpio1 13 GPIO_ACTIVE_HIGH>
    , <&gpio1 15 GPIO_ACTIVE_HIGH>
    , <&gpio0 2 GPIO_ACTIVE_HIGH>
    ;

    row-gpios
      = <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      , <&gpio1 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      , <&gpio0 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      , <&gpio1 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      , <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      , <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
      ;
};

&right_encoder {
    status = "okay";
};

&glidepoint_listener {
    status = "okay";
};

/ {
    chosen {
        // Peripheral (secondary) half
        zmk,split-role = "peripheral";
    };

    split_inputs {
        glidepoint_split_0: glidepoint_split_0 {
            compatible = "zmk,input-split";
            status = "okay";
            input = <&glidepoint0>;
        };
    };
};

// Cirque Glidepoint on SPI
&spi1 {
    status = "okay";
    cs-gpios = <&gpio0 06 GPIO_ACTIVE_LOW>;   // chip select pin

    glidepoint0: glidepoint@0 {
        compatible = "cirque,glidepoint";
        reg = <0>;  // chip select 0 on spi1
        spi-max-frequency = <1000000>; // 1MHz, adjust if needed
        irq-gpios = <&gpio0 08 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; // INT/RDY pin
        status = "okay";
    };
};
